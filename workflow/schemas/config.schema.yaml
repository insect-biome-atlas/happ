$schema: "http://json-schema.org/draft-07/schema#"

description: snakemake configuration file

type: object

properties:
  # INPUT PARAMETERS
  rundir:
    type: string
    description: "name of input directories, each should contain a 'asv_counts.tsv', a 'asv_seqs.fasta' file and a 'asv_taxa.tsv' file"
    default: "test"
  run_name:
    type: string
    description: "Specify a name of the run. Using different run_name you can run clustering with different parameters using the same vsearch output"
    default: "run1"
  split_rank:
    type: string
    description: "rank at which to split input file prior to clustering"
    default: "Family"
    enum: ["all", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "BOLD_bin"]
  ranks:
    type: array
    description: "ranks included in the asv_taxa.tsv taxonomy file"
    default: ["Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "BOLD_bin"]
    items:
      type: string
  codon_table:
    type: integer
    description: "codon table to use for translation"
    default: 5
    enum: [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
  codon_start:
    type: integer
    description: "reading frame start (1 based)"
    default: 1
    enum: [1, 2, 3]
  metadata:
    type: object
    default:
      metadata_file: ""
      sample_id_col: ""
      sample_type_col: ""
      sample_val: []
      blank_val: []
      split_col: ""
    properties:
      metadata_file:
        type: string
        description: "path to metadata file"
      sample_id_col:
        type: string
        description: "name of the column in the metadata file that contains the sample ids"
      sample_type_col: 
        type: string
        description: "column in metadata file that contains the sample type"
      split_col:
        type: string
        description: "split_col is the column in the metadata file that specifies what samples belong to the same dataset. This is used to split the samples by dataset for counting occurence in blanks."
        default: "dataset"
      blank_val:
        type: array
        description: "blank_val is the value in the split_col that specifies a blank sample"
        default: ["buffer_blank", "extraction_neg", "pcr_neg"]
  ### PREPROCESSING PARAMETERS
  taxonomy_source:
    type: string
    description: "source of taxonomic information"
    default: "sintax"
  taxtools:
    type: array
    description: "list of taxonomic tools to run"
    default: ["sintax"]
    items:
      type: string
      enum: ["sintax", "epa-ng", "vsearch"]
  epa-ng:
    type: object
    default:
      tree: ""
      tree_format: "newick"
      msa: ""
      msa_format: "fasta"
      model: "GTR+G+F"
      heuristic: "dyn-heur"
      tree_ranks:
        - "Kingdom"
        - "Phylum"
        - "Class"
        - "Order"
        - "Family"
        - "Genus"
        - "Species"
    properties:
      tree:
        type: string
        description: "path to reference tree"
      tree_format:
        type: string
        description: "format of reference tree"
        default: "newick"
        enum: ["newick", "nexus"]
      msa:
        type: string
        description: "path to reference alignment"
      msa_format:
        type: string
        description: "format of reference alignment"
        default: "fasta"
        enum: ["fasta", "nexus"]
      model:
        type: string
        description: "model to use for epa-ng"
        default: "GTR+G+F"
      heuristic:
        type: string
        description: "heuristic to use for epa-ng"
        default: "dyn-heur"
        enum: ["dyn-heur", "baseball-heur", "no-heur"]
      tree_ranks:
        type: array
        description: "ranks present in the reference tree"
        default: ["Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species"]
        items:
          type: string
      gappa:
        type: object
        default:
          distribution_ratio: -1
          consensus_thresh: 1
        properties:
          distribution_ratio:
            type: number
            description: "ratio of the distribution of the number of gaps in the alignment"
            default: -1
          consensus_thresh:
            type: number
            description: "threshold for consensus"
            default: 1
  sintax:
    type: object
    default:
      ref: ""
      randseed: 15
      cutoff: 0.8
      ranks:
        - "Kingdom"
        - "Phylum"
        - "Class"
        - "Order"
        - "Family"
        - "Genus"
        - "Species"
        - "BOLD_bin"
    properties:
      ref:
        type: string
        description: "path to reference database"
      randseed:
        type: integer
        description: "random seed for sintax"
        default: 15
      cutoff:
        type: number
        description: "cutoff for sintax"
        default: 0.8
      ranks:
        type: array
        description: "ranks to use for sintax"
        default: ["Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "BOLD_bin"]
        items:
          type: string
  reassign:
    type: object
    default:
      placeholder_rank: "Class"
      placeholder_taxa: ["Collembola", "Diplura", "Protura", "Insecta"]
      reassign_ranks: ["Order"]
      downstream_ranks: ["Family", "Genus", "Species", "BOLD_bin"]
    properties:
      placeholder_rank:
        type: string
        description: "taxonomic rank at which ASVs must be classified by EPA-NG, but unclassified by SINTAX in order to be reclassified."
        default: "Class"
      placeholder_taxa:
        type: array
        description: "taxa that ASVs must be classified as by both EPA-NG, and SINTAX (at placeholder_rank) in order to be reassigned at lower levels."
        default: ["Collembola", "Diplura", "Protura", "Insecta"]
      reassign_ranks:
        type: array
        description: "ranks at which to reassign ASVs"
        default: ["Order"]
        items:
          type: string
      downstream_ranks:
        type: array
        description: "taxonomic ranks downstream of reassign_ranks for which to update taxonomic assignments"
        default: ["Family", "Genus", "Species", "BOLD_bin"]
        items:
          type: string
  preprocessing:
    type: object
    default:
      filter_length: True
      min_length: 403
      max_length: 418
      filter_codons: True
      stop_codons: "TAA,TAG"
      start_position: 1
      end_position: 0
    properties:
      filter_length:
        type: boolean
        default: True
        description: Whether to filter sequences based on length
      min_length:
        type: integer
        default: 403
        description: Minimum length of sequences to keep
      max_length:
        type: integer
        default: 418
        description: Maximum length of sequences to keep
      filter_codons:
        type: boolean
        default: True
        description: Whether to filter sequences based on in-frame stop codons
      stop_codons:
        type: string
        default: "TAA,TAG"
        description: Comma-separated list of stop codons
      start_position:
        type: integer
        default: 1
        description: Reading frame start (1 based)
      end_position:
        type: integer
        default: 0
        description: Reading frame end (1 based), set to 0 to ignore
  ## TAXONOMY PARAMETERS
  consensus_ranks:
    type: array
    description: "ranks to use for calculating consensus taxonomy for clusters"
    default: ["Family", "Genus", "Species"]
    items:
      type: string
  consensus_threshold:
    type: number
    description: "threshold to use for calculating consensus taxonomy for clusters"
    default: 80
    minimum: 0.0
    maximum: 100
  evaluation_rank:
    type: string
    description: "rank at which to evaluate clusters"
    default: "Species"
    enum: ["all", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "BOLD_bin"]
  software:
    type: array
    description: "clustering software to run"
    default: ["swarm", "opticlust", "dbotu3"]
    items:
      type: string
      enum: ["swarm", "opticlust", "dbotu3"]
  postprocess:
    type: boolean
    description: "whether to run postprocessing steps"
    default: False
  swarm:
    type: object
    default:
      differences: 13
      no-otu-breaking: False
      fastidious: False
      boundary: 0
      threads: 10
      match-reward: 5
      mismatch-penalty: 4
      gap-opening-penalty: 12
      gap-extension-penalty: 4
    properties:
      match-reward:
        type: integer
        description: "reward for a nucleotide match"
        default: 5
      mismatch-penalty:
        type: integer
        description: "penalty for a nucleotide mismatch"
        default: 4
      gap-opening-penalty:
        type: integer
        description: "penalty for a gap opening"
        default: 12
      gap-extension-penalty:
        type: integer
        description: "penalty for extending a gap"
        default: 4
      differences:
        type: integer
        description: "maximum number of differences allowed between two amplicons"
        default: 13
      no-otu-breaking:
        type: boolean
        description: "when working with d = 1, deactivate the built-in cluster refinement (not recommended)"
        default: False
      fastidious:
        type: boolean
        description: "when working with d = 1, perform a second clustering pass to reduce the number of small clusters (recommended option)."
        default: False
      boundary:
        type: integer
        description: "when using the option --fastidious (-f), define the minimum abundance of what should be considered a large cluster"
        default: 0
      threads:
        type: integer
        description: "number of threads to use for swarm"
        minimum: 1
        default: 10
  dbotu3:
    type: object
    default:
      dist: 0.1
      abund: 10.0
      pval: 0.0005
    properties:
      dist:
        type: number
        description: "maximum genetic dissimilarity between sequences"
        default: 0.1
      abund:
        type: number
        description: "minimum fold difference for comparing two OTUs"
        default: 10.0
      pval:
        type: number
        description: "minimum p-value for merging OTUs"
        default: 0.0005
  opticlust:
    type: object
    default:
      aligner: "vsearch"
      delta: 0.0001
      cutoff: 0.05
      initialize: "singleton"
      precision: 1000
      threads: 10
    properties:
      aligner:
        type: string
        description: "aligner to use for calculating pairwise similarities"
        default: "vsearch"
        enum: ["vsearch", "mothur"]
      delta:
        type: number
        description: "allows to set the stable value for the metric in the opticlust method"
        default: 0.0001
      cutoff:
        type: number
        description: "the list file is created for the cutoff you set"
        default: 0.03
      initialize:
        type: string
        description: "The initialize parameter allows to select the initial randomization for the opticlust method"
        default: "singleton"
        enum: ["singleton", "oneotu"]
      precision:
        type: integer
        description: "precision for opticlust"
        default: 1000
      threads:
        type: integer
        description: "number of threads to use for opticlust"
        default: 10
        minimum: 1
  lulu:
    type: object
    default:
      run_name: "lulu1"
      alignment_tool: "vsearch"
      max_target_seqs: 10
      minimum_ratio_type: "min"
      minimum_ratio: 1
      minimum_match: 84
      minimum_relative_cooccurence: 0.95
      large_orders: []
      non_noise_ASVs: ""
      filter_unclassified_rank: "Order"
    properties:
      run_name:
        type: string
        description: "Name of lulu run settings"
        default: "lulu1"
      alignment_tool:
        type: string
        description: "Tool to use for alignment"
        default: "vsearch"
        enum: ["vsearch", "blastn"]
      max_target_seqs:
        type: integer
        description: "Maximum number of target sequences to return from aligner"
        default: 10
      non_noise_ASVs:
        type: string
        description: "Path to a file containing ASVs that are known to be non-noise"
        default: ""
      minimum_ratio_type:
        type: string
        description: "sets whether a potential error must have lower abundance than the parent in all samples"
        default: "min"
        enum: ["min", "avg"]
      minimum_ratio:
        type: integer
        description: "sets the minimum abundance ratio between a potential error and a potential parent to be identified as an error"
        default: 1
      minimum_match:
        type: integer
        description: "minimum threshold of sequence similarity for considering any OTU as an error of another can be set"
        default: 84
      minimum_relative_cooccurence:
        type: number
        description: "minimum co-occurrence rate – i.e. the lower rate of occurrence of the potential error explained by co-occurrence with the potential parent for considering error state."
        default: 0.95
      large_orders:
        type: array
        description: "List of orders known to contain a large number of clusters"
        default: []
      filter_unclassified_rank:
        type: string
        description: "Remove ASVs that are unclassified at this rank (begin with unclassified) prior to chimera filtering and clustering"
        default: "Order"
  cleaning:
    type: object
    default:
      metadata_file: ""
      sample_id_col: ""
      sample_type_col: ""
      split_col: ""
      blank_val: []
      max_blank_occurrence: 5
    properties:
      metadata_file:
        type: string
        description: "path to metadata file"
      sample_id_col:
        type: string
        description: "name of the column in the metadata file that contains the sample ids"
      sample_type_col:
        type: string
        description: "column in metadata file that contains the sample type"
      split_col:
        type: string
        description: "split_col is the column in the metadata file that specifies what samples belong to the same dataset. This is used to split the samples by dataset for counting occurence in blanks."
        default: ""
      blank_val:
        type: array
        description: "blank_val is the value in the split_col that specifies a blank sample"
        default: []
      max_blank_occurrence:
        type: integer
        description: "max_blank_occurrence is the maximum number of times an ASV can occur in a blank sample"
        default: 5
  vsearch:
    type: object
    default:
      threads: 10
      id: 0.84
      iddef: "1"
      query_cov: 0.9
    properties:
      threads:
        type: integer
        description: "threads to use for vsearch"
        default: 10
        minimum: 1
      id:
        type: number
        description: "reject if identity lower"
        default: 0.84
        minimum: 0.0
        maximum: 1.0
      iddef:
        type: string
        description: "id definition, 0-4=CD-HIT,all,int,MBL,BLAST (2)"
        default: "1"
      query_cov:
        type: number
        description: "reject if fraction of query seq. aligned lower"
        default: 0.9
  noise_filtering:
    type: object
    default:
      split_rank: "Order"
      assignment_rank: "Order"
      max_target_seqs: 10
      min_match: 84
      n_closest: 10
      echo_min_overlap: 0.9
      echo_read_ratio_type: "mean"
      echo_max_read_ratio: 0.1
      echo_require_corr: False
      evo_local_min_overlap: 0.95
      dist_type_local: "dadn"
      dist_threshold_local: 1.8
      dist_threshold_global: 4.0
      abundance_cutoff_type: "sum"
      abundance_cutoff: 4
    properties:
      split_rank:
        type: string
        description: "rank at which to split input file prior to noise_filtering"
        default: "Order"
      assignment_rank:
        type: string
        description: "treat clusters as noise if they are unassigned at this rank"
        default: "Order"
      max_target_seqs:
        type: integer
        description: "Maximum number of target sequences to return from aligner"
        default: 10
      n_closest:
        type: integer
        description: "Maximum number of closest sequences to compare to when filtering noise"
        default: 10
      min_match:
        type: integer
        description: "minimum threshold of sequence similarity for considering any OTU as an error of another can be set"
        default: 84
      echo_min_overlap:
        type: number
        description: "In the echo filter, the minimum fraction of the putative “noise” OTU samples that must also contain the putative authentic CO1 “parent” OTU"
        default: 0.9
        minimum: 0.0
        maximum: 1.0
      echo_read_ratio_type:
        type: string
        description: "In the echo filter, the type of read ratio considered by the echo_max_read_ratio criterion: “max” = maximum ratio between noise and parent reads across the samples where they co-occur; “mean” = mean ratio between noise and parent reads across the sample where they co-occur."
        default: "mean"
        enum: ["max", "mean"]
      echo_max_read_ratio:
        type: number
        description: "In the echo filter, the maximum value of the ratio between noise and parent reads"
        default: 0.1
      echo_require_corr:
        type: boolean
        description: "In the echo filter, should a significant correlation between noise and parent read numbers be required before the putative OTU is removed? The significance is evaluated using a linear model, requiring that the regression coefficient is smaller than echo_max_read_ratio, and the p-value <=0.05."
        default: False
      evo_local_min_overlap:
        type: number
        description: "In the local evo filter, minimum fraction of the putative “noise” OTU samples that must also contain the putative authentic CO1 “parent” OTU."
        default: 0.95
        minimum: 0.0
        maximum: 1.0
      dist_type_local:
        type: string
        description: "In the local evo filter, should distances between representative ASVs be based on unweighted amino acid distances (“dadn”) or amino acid distances weighted based on biochemical similarities (“wdadn”)?"
        default: "dadn"
        enum: ["dadn", "wdadn"]
      dist_threshold_local:
        type: number
        description: "In the local evo filter, the distance value above which an OTU is considered to represent noise."
        default: 1.8
      dist_threshold_global:
        type: number
        description: "In the gloval evo filter, the distance value above which an OTU is considered to represent noise."
        default: 4.0
      abundance_cutoff_type:
        type: string
        description: "Should the abundance cutoff be based on the sum of reads across samples in the dataset (“sum”), or the max number of reads (“max”)?"
        default: "sum"
        enum: ["sum", "max"]
      abundance_cutoff:
        type: number
        description: "The minimum number of reads required for an OTU to pass the abundance filter"
        default: 4
  chimera:
    type: object
    default:
      remove_chimeras: True
      method: "samplewise"
      run_name: "chimera1"
      algorithm: "uchime_denovo"
      dn: 1.4
      mindiffs: 3
      mindiv: 0.8
      minh: 0.28
      min_samples_shared: 1
      min_frac_samples_shared: 0
      min_chimeric_samples: 0
      min_frac_chimeric_samples: 0
    properties:
      run_name:
        type: string
        description: "Name of chimera run settings"
        default: "chimera1"
      method:
        type: string
        description: "Method to use for detecting chimeras. Can be either samplewise or batchwise"
        default: "batchwise"
        enum: ["batchwise", "samplewise"]
      algorithm:
        type: string
        description: "Algorithm for chimera detection"
        default: "uchime_denovo"
        enum: ["uchime_denovo", "uchime2_denovo", "uchime3_denovo"]
      dn:
        type: number
        description: "Pseudo-count prior on the number of no votes"
        default: 1.4
      mindiffs:
        type: integer
        description: "Minimum number of differences per segment"
        default: 3
      mindiv:
        type: number
        description: "Minimum divergence from closest parent"
        default: 0.8
      minh:
        type: number
        description: "Minimum score (h)"
        default: 0.28
      abskew:
        type: number
        description: "The ratio between the parent abundance and the putative chimera abundance"
      min_samples_shared:
        type: integer
        description: "In batchwise mode this is the minimum number of times a putative chimera has to be present in the same sample as its parents"
        default: 0
      min_frac_samples_shared:
        type: number
        description: "In batchwise mode this is the minimum fraction (out of all samples where the ASV is present) that a putative chimeras has to be present with its parents"
        default: 0
      min_chimeric_samples:
        type: integer
        description: "In samplewise mode this is the minimum number of times a sequence has to be marked as chimeric"
        default: 0
      min_frac_chimeric_samples:
        type: integer
        description: "In samplewise mode this is the minimum fraction of samples in which a sequence has to be marked as chimeric"
        default: 0
