$schema: "http://json-schema.org/draft-07/schema#"

description: snakemake configuration file

type: object

properties:
  default_partition:
    type: string
    description: "default partition to use for slurm jobs"
    default: "shared"
  long_partition:
    type: string
    description: "long partition to use for slurm jobs"
    default: "long"
  run_name:
    type: string
    description: "Specify a name of the run. Using different run_name you can run clustering with different parameters using the same vsearch output"
    default: "run1"
  rundir:
    type: string
    description: "name of input directories, each should contain a 'asv_counts.tsv', a 'asv_seqs.fasta' file and a 'asv_taxa.tsv' file"
    default: "test"
  split_rank:
    type: string
    description: "rank at which to split input file prior to clustering"
    default: "Family"
    enum: ["all", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "BOLD_bin"]
  ranks:
    type: array
    description: "ranks included in the asv_taxa.tsv taxonomy file"
    default: ["Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "BOLD_bin"]
    items:
      type: string
  consensus_ranks:
    type: array
    description: "ranks to use for calculating consensus taxonomy for clusters"
    default: ["Family", "Genus", "Species"]
    items:
      type: string
  consensus_threshold:
    type: number
    description: "threshold to use for calculating consensus taxonomy for clusters"
    default: 80
    minimum: 0.0
    maximum: 100
  evaluation_rank:
    type: string
    description: "rank at which to evaluate clusters"
    default: "Species"
    enum: ["all", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species", "BOLD_bin"]
  software:
    type: array
    description: "clustering software to run"
    default: ["swarm"]
    items:
      type: string
      enum: ["swarm", "opticlust", "dbotu3"]
  postprocess:
    type: boolean
    description: "whether to run postprocessing steps"
    default: False
  metadata_file:
    type: string
    description: "path to metadata file"
  sample_id_col:
    type: string
    description: "name of the column in the metadata file that contains the sample ids"
  sample_type_col: 
    type: string
    description: "column in metadata file that contains the sample type"
  split_col:
    type: string
    description: "split_col is the column in the metadata file that specifies what samples belong to the same dataset. This is used to split the samples by dataset for counting occurence in blanks."
    default: "dataset"
  blank_val:
    type: array
    description: "blank_val is the value in the split_col that specifies a blank sample"
    default: ["buffer_blank", "extraction_neg", "pcr_neg"]
  max_blank_occurrence:
    type: integer
    description: "max_blank_occurrence is the maximum number of times an ASV can occur in a blank sample"
    default: 5
  swarm:
    type: object
    default:
      differences: 13
      no-otu-breaking: False
      fastidious: False
      boundary: 0
      threads: 10
      match-reward: 5
      mismatch-penalty: 4
      gap-opening-penalty: 12
      gap-extension-penalty: 4
    properties:
      match-reward:
        type: integer
        description: "reward for a nucleotide match"
        default: 5
      mismatch-penalty:
        type: integer
        description: "penalty for a nucleotide mismatch"
        default: 4
      gap-opening-penalty:
        type: integer
        description: "penalty for a gap opening"
        default: 12
      gap-extension-penalty:
        type: integer
        description: "penalty for extending a gap"
        default: 4
      differences:
        type: integer
        description: "maximum number of differences allowed between two amplicons"
        default: 13
      no-otu-breaking:
        type: boolean
        description: "when working with d = 1, deactivate the built-in cluster refinement (not recommended)"
        default: False
      fastidious:
        type: boolean
        description: "when working with d = 1, perform a second clustering pass to reduce the number of small clusters (recommended option)."
        default: False
      boundary:
        type: integer
        description: "when using the option --fastidious (-f), define the minimum abundance of what should be considered a large cluster"
        default: 0
      threads:
        type: integer
        description: "number of threads to use for swarm"
        minimum: 1
        default: 10
  dbotu3:
    type: object
    default:
      dist: 0.1
      abund: 10.0
      pval: 0.0005
    properties:
      dist:
        type: number
        description: "maximum genetic dissimilarity between sequences"
        default: 0.1
      abund:
        type: number
        description: "minimum fold difference for comparing two OTUs"
        default: 10.0
      pval:
        type: number
        description: "minimum p-value for merging OTUs"
        default: 0.0005
  opticlust:
    type: object
    default:
      aligner: "vsearch"
      delta: 0.0001
      cutoff: 0.05
      initialize: "singleton"
      precision: 1000
      threads: 10
    properties:
      aligner:
        type: string
        description: "aligner to use for calculating pairwise similarities"
        default: "vsearch"
        enum: ["vsearch", "mothur"]
      delta:
        type: number
        description: "allows to set the stable value for the metric in the opticlust method"
        default: 0.0001
      cutoff:
        type: number
        description: "the list file is created for the cutoff you set"
        default: 0.03
      initialize:
        type: string
        description: "The initialize parameter allows to select the initial randomization for the opticlust method"
        default: "singleton"
        enum: ["singleton", "oneotu"]
      precision:
        type: integer
        description: "precision for opticlust"
        default: 1000
      threads:
        type: integer
        description: "number of threads to use for opticlust"
        default: 10
        minimum: 1
  lulu:
    type: object
    default:
      minimum_ratio_type: "min"
      minimum_ratio: 1
      minimum_match: 84
      minimum_relative_cooccurence: 0.95
      large_orders: []
      non_numt_ASVs: ""
      filter_unclassified_rank: "Order"
    properties:
      non_numt_ASVs:
        type: string
        description: "Path to a file containing ASVs that are known to be non-numts"
        default: ""
      minimum_ratio_type:
        type: string
        description: "sets whether a potential error must have lower abundance than the parent in all samples"
        default: "min"
        enum: ["min", "avg"]
      minimum_ratio:
        type: integer
        description: "sets the minimum abundance ratio between a potential error and a potential parent to be identified as an error"
        default: 1
      minimum_match:
        type: integer
        description: "minimum threshold of sequence similarity for considering any OTU as an error of another can be set"
        default: 84
      minimum_relative_cooccurence:
        type: number
        description: "minimum co-occurrence rate â€“ i.e. the lower rate of occurrence of the potential error explained by co-occurrence with the potential parent for considering error state."
        default: 0.95
      large_orders:
        type: array
        description: "List of orders known to contain a large number of clusters"
        default: []
      filter_unclassified_rank:
        type: string
        description: "Remove ASVs that are unclassified at this rank (begin with unclassified) prior to chimera filtering and clustering"
        default: "Order"
  vsearch:
    type: object
    default:
      threads: 10
      id: 0.84
      iddef: "1"
      query_cov: 0.9
    properties:
      threads:
        type: integer
        description: "threads to use for vsearch"
        default: 10
        minimum: 1
      id:
        type: number
        description: "reject if identity lower"
        default: 0.84
        minimum: 0.0
        maximum: 1.0
      iddef:
        type: string
        description: "id definition, 0-4=CD-HIT,all,int,MBL,BLAST (2)"
        default: "1"
      query_cov:
        type: number
        description: "reject if fraction of query seq. aligned lower"
        default: 0.9
  numts:
    type: object
    default:
      n_closest: 5
      abundance_threshold: 3
      non_numt_ASVs: ""
      spikein_file: ""
      spikein_method: "BOLD_bin"
      large_orders: []
      filter_unclassified_rank: "Order"
    properties:
      n_closest:
        type: integer
        description: "Maximum number of closest sequences to compare to when filtering numts"
        default: 5
      abundance_threshold:
        type: integer
        description: "Minimum abundance threshold for filtering numts"
        default: 3
      non_numt_ASVs:
        type: string
        description: "Path to a file containing ASVs that are known to be non-numts"
        default: ""
      spikein_file: 
        type: string
        description: "Path to a tab-separated file containing taxonomic information for biological spike-ins"
        default: ""
      spikein_method:
        type: string
        description: "Method to identify spike-in clusters"
        default: "BOLD_bin"
        enum: ["BOLD_bin", "species"]
      large_orders:
        type: array
        description: "List of orders known to contain a large number of clusters"
        default: []
      filter_unclassified_rank:
        type: string
        description: "Remove ASVs that are unclassified at this rank (begin with unclassified) prior to chimera filtering and clustering"
        default: "Order"
  chimera:
    type: object
    default:
      remove_chimeras: True
      method: "samplewise"
      run_name: "chimera1"
      algorithm: "uchime_denovo"
      dn: 1.4
      mindiffs: 3
      mindiv: 0.8
      minh: 0.28
      min_samples_shared: 1
      min_frac_samples_shared: 0
      min_chimeric_samples: 0
      min_frac_chimeric_samples: 0
    properties:
      run_name:
        type: string
        description: "Name of chimera run settings"
        default: "chimera1"
      method:
        type: string
        description: "Method to use for detecting chimeras. Can be either samplewise or batchwise"
        default: "batchwise"
        enum: ["batchwise", "samplewise"]
      algorithm:
        type: string
        description: "Algorithm for chimera detection"
        default: "uchime_denovo"
        enum: ["uchime_denovo", "uchime2_denovo", "uchime3_denovo"]
      dn:
        type: number
        description: "Pseudo-count prior on the number of no votes"
        default: 1.4
      mindiffs:
        type: integer
        description: "Minimum number of differences per segment"
        default: 3
      mindiv:
        type: number
        description: "Minimum divergence from closest parent"
        default: 0.8
      minh:
        type: number
        description: "Minimum score (h)"
        default: 0.28
      abskew:
        type: number
        description: "The ratio between the parent abundance and the putative chimera abundance"
      min_samples_shared:
        type: integer
        description: "In batchwise mode this is the minimum number of times a putative chimera has to be present in the same sample as its parents"
        default: 0
      min_frac_samples_shared:
        type: number
        description: "In batchwise mode this is the minimum fraction (out of all samples where the ASV is present) that a putative chimeras has to be present with its parents"
        default: 0
      min_chimeric_samples:
        type: integer
        description: "In samplewise mode this is the minimum number of times a sequence has to be marked as chimeric"
        default: 0
      min_frac_chimeric_samples:
        type: integer
        description: "In samplewise mode this is the minimum fraction of samples in which a sequence has to be marked as chimeric"
        default: 0
